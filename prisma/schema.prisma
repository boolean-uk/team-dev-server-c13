generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  username     String?       @unique
  password     String
  cohortId     Int?
  role         Role          @default(STUDENT)
  cohort       Cohort?       @relation(fields: [cohortId], references: [id])
  deliveryLogs DeliveryLog[]
  posts        Post[]
  profile      Profile?
}

model Profile {
  id          Int       @id @default(autoincrement())
  userId      Int       @unique
  user        User      @relation(fields: [userId], references: [id])
  firstName   String
  lastName    String
  bio         String?
  githubUrl   String?
  profilePicture String?
  specialism  String? @default("")
  mobile      String? @default("")
  }

model Cohort {
  id           Int           @id @default(autoincrement())
  startDate    DateTime?
  endDate      DateTime?
  deliveryLogs DeliveryLog[]
  users        User[]
}

model Post {
  id      Int    @id @default(autoincrement())
  content String
  userId  Int
  user    User   @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DeliveryLog {
  id       Int               @id @default(autoincrement())
  date     DateTime
  userId   Int
  cohortId Int
  cohort   Cohort            @relation(fields: [cohortId], references: [id])
  user     User              @relation(fields: [userId], references: [id])
  lines    DeliveryLogLine[]
}

model DeliveryLogLine {
  id      Int         @id @default(autoincrement())
  content String
  logId   Int
  log     DeliveryLog @relation(fields: [logId], references: [id])
}

enum Role {
  STUDENT
  TEACHER
}
